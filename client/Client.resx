<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iIjIP8G5H6ccWYVkpSZRAAAAAElFTkSuQmCC
</value>
  </data>
</root>